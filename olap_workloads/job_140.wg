SELECT t1.title, COUNT(t2.movie_id) AS num_referenced_movies FROM title AS t1 JOIN movie_link AS t2 ON t1.id = t2.movie_id WHERE t2.link_type_id = (SELECT id FROM link_type WHERE link = 'referenced in') GROUP BY t1.title HAVING COUNT(t2.movie_id) > 5 ORDER BY num_referenced_movies DESC;
SELECT n.name, COUNT(ci.movie_id) AS num_movies, AVG(mi.info::numeric) AS avg_rating FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_info AS mi ON ci.movie_id = mi.movie_id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') GROUP BY n.name HAVING COUNT(ci.movie_id) > 10 ORDER BY avg_rating DESC, num_movies DESC;
SELECT kt.kind, COUNT(t.id) AS num_titles, AVG(mi.info::numeric) AS avg_rating FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY kt.kind HAVING COUNT(t.id) > 100 ORDER BY avg_rating DESC;
SELECT cn.name, COUNT(ci.movie_id) AS num_movies FROM char_name AS cn JOIN cast_info AS ci ON cn.id = ci.person_role_id WHERE ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') GROUP BY cn.name HAVING COUNT(ci.movie_id) > 5 ORDER BY num_movies DESC;
SELECT t.title, COUNT(mk.keyword_id) AS num_keywords FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 GROUP BY t.title HAVING COUNT(mk.keyword_id) > 10 ORDER BY num_keywords DESC;