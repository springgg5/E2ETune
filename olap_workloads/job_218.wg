SELECT t.title, COUNT(c.id) AS total_characters FROM title AS t JOIN cast_info AS c ON t.id = c.movie_id JOIN char_name AS ch ON c.person_role_id = ch.id WHERE ch.surname_pcode = 'W63' AND t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'tv series') GROUP BY t.title ORDER BY total_characters DESC;
SELECT n.name, COUNT(c.id) AS total_movies FROM name AS n JOIN cast_info AS c ON n.id = c.person_id JOIN title AS t ON c.movie_id = t.id WHERE t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'video game') GROUP BY n.name ORDER BY total_movies DESC LIMIT 10;
SELECT t.title, AVG(c.nr_order) AS average_order FROM title AS t JOIN cast_info AS c ON t.id = c.movie_id WHERE t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'tv mini series') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY t.title HAVING COUNT(c.id) > 1 ORDER BY average_order DESC;
SELECT k.keyword, COUNT(mk.id) AS total_movies FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN title AS t ON mk.movie_id = t.id WHERE t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'tv series') GROUP BY k.keyword ORDER BY total_movies DESC LIMIT 10;
SELECT n.name, COUNT(c.id) AS total_roles FROM name AS n JOIN cast_info AS c ON n.id = c.person_id JOIN role_type AS r ON c.role_id = r.id WHERE r.role = 'actor' AND n.gender = 'M' GROUP BY n.name HAVING COUNT(c.id) > 10 ORDER BY total_roles DESC;
SELECT t.title, COUNT(ml.id) AS total_links FROM title AS t JOIN movie_link AS ml ON t.id = ml.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE lt.link = 'follows' AND t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'tv series') GROUP BY t.title ORDER BY total_links DESC LIMIT 5;