SELECT COUNT(*) AS total_sales, EXTRACT(YEAR FROM d_date) AS year FROM store_sales JOIN date_dim ON store_sales.ss_sold_date_sk = date_dim.d_date_sk GROUP BY year ORDER BY year ASC;
SELECT i_category, SUM(ws_sales_price) AS total_sales FROM web_sales JOIN item ON web_sales.ws_item_sk = item.i_item_sk GROUP BY i_category HAVING SUM(ws_sales_price) > 100000 ORDER BY total_sales DESC;
SELECT w_state, COUNT(*) AS total_warehouses FROM warehouse GROUP BY w_state HAVING COUNT(*) > 1 ORDER BY total_warehouses DESC;
SELECT s_store_name, SUM(ss_sales_price) AS total_sales FROM store_sales JOIN store ON store_sales.ss_store_sk = store.s_store_sk WHERE ss_sales_price > 1000 GROUP BY s_store_name ORDER BY total_sales DESC;
SELECT t_hour, COUNT(*) AS total_sales FROM store_sales JOIN time_dim ON store_sales.ss_sold_time_sk = time_dim.t_time_sk WHERE t_second IN ('37', '49', '42') GROUP BY t_hour ORDER BY total_sales DESC;
SELECT wp_type, COUNT(*) AS total_pages FROM web_page WHERE wp_url LIKE 'http://www.foo.com%' GROUP BY wp_type HAVING COUNT(*) > 10 ORDER BY total_pages DESC;
SELECT hd_buy_potential, COUNT(*) AS total_customers FROM household_demographics WHERE hd_dep_count = 1 AND hd_income_band_sk IN (19, 20, 12) GROUP BY hd_buy_potential ORDER BY total_customers DESC;
SELECT c_birth_year, AVG(cs_sales_price) AS average_sales FROM catalog_sales JOIN customer ON catalog_sales.cs_bill_customer_sk = customer.c_customer_sk GROUP BY c_birth_year HAVING COUNT(*) > 10 ORDER BY average_sales DESC;
SELECT w_warehouse_name, SUM(inv_quantity_on_hand) AS total_inventory FROM inventory JOIN warehouse ON inventory.inv_warehouse_sk = warehouse.w_warehouse_sk GROUP BY w_warehouse_name ORDER BY total_inventory DESC;
SELECT p_promo_name, SUM(cs_sales_price) AS total_sales FROM catalog_sales JOIN promotion ON catalog_sales.cs_promo_sk = promotion.p_promo_sk WHERE p_discount_active = 'Y' GROUP BY p_promo_name ORDER BY total_sales DESC;
SELECT COUNT(*) AS total_returns, EXTRACT(YEAR FROM d_date) AS year FROM catalog_returns JOIN date_dim ON catalog_returns.cr_returned_date_sk = date_dim.d_date_sk WHERE cr_net_loss > 100 GROUP BY year ORDER BY year ASC;