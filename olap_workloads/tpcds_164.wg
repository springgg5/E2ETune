SELECT d_year, COUNT(ss_ticket_number) as total_sales FROM date_dim JOIN store_sales ON date_dim.d_date_sk = store_sales.ss_sold_date_sk WHERE d_first_dom = '2415902' GROUP BY d_year ORDER BY d_year ASC;
SELECT ca_state, SUM(ss_net_profit) as profit FROM customer_address JOIN store_sales ON customer_address.ca_address_sk = store_sales.ss_addr_sk WHERE ca_country = 'United States' AND ca_gmt_offset = '-9.00' GROUP BY ca_state ORDER BY profit DESC;
SELECT ca_suite_number, AVG(ss_ext_tax) as avg_tax FROM customer_address JOIN store_sales ON customer_address.ca_address_sk = store_sales.ss_addr_sk WHERE ca_suite_number IN ('Suite 340', 'Suite 430', 'Suite 40') GROUP BY ca_suite_number;
SELECT i_category, COUNT(ss_ticket_number) as total_sales FROM item JOIN store_sales ON item.i_item_sk = store_sales.ss_item_sk WHERE i_manufact_id = 100 GROUP BY i_category HAVING COUNT(ss_ticket_number) > 1000 ORDER BY total_sales DESC;
SELECT w_state, SUM(inv_quantity_on_hand) as total_inventory FROM warehouse JOIN inventory ON warehouse.w_warehouse_sk = inventory.inv_warehouse_sk GROUP BY w_state HAVING SUM(inv_quantity_on_hand) > 10000 ORDER BY total_inventory DESC;
SELECT d_year, COUNT(cs_order_number) as total_orders FROM date_dim JOIN catalog_sales ON date_dim.d_date_sk = catalog_sales.cs_sold_date_sk WHERE d_year IN (1900, 1901, 1902) GROUP BY d_year ORDER BY d_year ASC;
SELECT sm_type, SUM(cr_net_loss) as total_loss FROM ship_mode JOIN catalog_returns ON ship_mode.sm_ship_mode_sk = catalog_returns.cr_ship_mode_sk GROUP BY sm_type HAVING SUM(cr_net_loss) > 10000 ORDER BY total_loss DESC;
SELECT p_promo_name, COUNT(ws_order_number) as total_orders FROM promotion JOIN web_sales ON promotion.p_promo_sk = web_sales.ws_promo_sk WHERE p_discount_active = 'Y' GROUP BY p_promo_name HAVING COUNT(ws_order_number) > 1000 ORDER BY total_orders DESC;
SELECT hd_buy_potential, AVG(ss_net_paid_inc_tax) as avg_payment FROM household_demographics JOIN store_sales ON household_demographics.hd_demo_sk = store_sales.ss_hdemo_sk WHERE hd_vehicle_count > 2 GROUP BY hd_buy_potential ORDER BY avg_payment DESC;